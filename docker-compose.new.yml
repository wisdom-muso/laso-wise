version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: laso-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: laso_medical
      MYSQL_USER: laso_user
      MYSQL_PASSWORD: laso_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - laso-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # NestJS Backend
  nestjs-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laso-nestjs-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=laso_user
      - DB_PASSWORD=laso_password
      - DB_DATABASE=laso_medical
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - laso-network
    volumes:
      - ./backend/uploads:/usr/src/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  react-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: laso-react-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - VITE_API_BASE=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      nestjs-backend:
        condition: service_healthy
    networks:
      - laso-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  laso-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local