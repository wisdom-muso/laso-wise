# Upstream configuration
upstream django_app {
    server web:8005;
    keepalive 32;
}

# Rate limiting for specific endpoints
map $request_uri $limit_key {
    ~*/admin/login/     $binary_remote_addr;
    ~*/api/             $binary_remote_addr;
    default             "";
}

# Server configuration for HTTP (redirect to HTTPS if SSL is enabled)
server {
    listen 80;
    server_name ${DOMAIN} www.${DOMAIN};
    
    # Health check endpoint (always allow)
    location /health/ {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect to HTTPS if SSL is enabled
    location / {
        if ($ssl_enabled = "true") {
            return 301 https://$server_name$request_uri;
        }
        # If SSL is not enabled, proxy to Django app
        include /etc/nginx/snippets/proxy.conf;
        proxy_pass http://django_app;
    }
}

# Server configuration for HTTPS (only if SSL is enabled)
server {
    listen 443 ssl http2;
    server_name ${DOMAIN} www.${DOMAIN};
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_private_key /etc/nginx/ssl/key.pem;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Additional security headers for HTTPS
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'self';" always;
    
    # Health check endpoint
    location /health/ {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Django admin rate limiting
    location /admin/login/ {
        limit_req zone=login burst=3 nodelay;
        limit_conn addr 5;
        include /etc/nginx/snippets/proxy.conf;
        proxy_pass http://django_app;
    }
    
    # API endpoints rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;
        include /etc/nginx/snippets/proxy.conf;
        proxy_pass http://django_app;
    }
    
    # Static files with aggressive caching
    location /static/ {
        alias /usr/src/app/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Compression
        gzip_static on;
        
        # Security headers for static files
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Handle missing files gracefully
        try_files $uri $uri/ =404;
        
        # Specific caching for different file types
        location ~* \.(css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
    }
    
    # Media files with moderate caching
    location /media/ {
        alias /usr/src/app/media/;
        expires 30d;
        add_header Cache-Control "public";
        access_log off;
        
        # Security headers for media files
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Handle missing files gracefully
        try_files $uri $uri/ =404;
    }
    
    # Django application with general rate limiting
    location / {
        limit_req zone=general burst=10 nodelay;
        limit_conn addr 10;
        include /etc/nginx/snippets/proxy.conf;
        proxy_pass http://django_app;
    }
    
    # Deny access to sensitive files
    location ~ /\.(ht|env|git) {
        deny all;
        return 404;
    }
    
    # Deny access to backup and temporary files
    location ~ \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        return 404;
    }
}

# HTTP configuration (fallback when SSL is not enabled)
map $ssl_enabled $redirect_scheme {
    "true" https;
    default $scheme;
}
