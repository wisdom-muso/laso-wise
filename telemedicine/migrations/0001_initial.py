# Generated by Django 5.1.7 on 2025-06-30 14:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('appointments', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TelemedicineAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('time', models.TimeField(verbose_name='Time')),
                ('duration', models.PositiveIntegerField(default=30, verbose_name='Duration (minutes)')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20, verbose_name='Status')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('chief_complaint', models.TextField(blank=True, verbose_name='Chief Complaint')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_telemedicine_appointments', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('doctor', models.ForeignKey(limit_choices_to={'user_type': 'doctor'}, on_delete=django.db.models.deletion.CASCADE, related_name='telemedicine_doctor_appointments', to=settings.AUTH_USER_MODEL, verbose_name='Doctor')),
                ('patient', models.ForeignKey(limit_choices_to={'user_type': 'patient'}, on_delete=django.db.models.deletion.CASCADE, related_name='telemedicine_patient_appointments', to=settings.AUTH_USER_MODEL, verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Telemedicine Appointment',
                'verbose_name_plural': 'Telemedicine Appointments',
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='TeleMedicineConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_type', models.CharField(choices=[('video', 'Video Call'), ('audio', 'Audio Call'), ('chat', 'Text Chat'), ('hybrid', 'Hybrid (Video + Chat)')], default='video', max_length=20, verbose_name='Consultation Type')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('waiting', 'Waiting'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('technical_issue', 'Technical Issue')], default='scheduled', max_length=20, verbose_name='Status')),
                ('meeting_id', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='Meeting ID')),
                ('meeting_url', models.URLField(blank=True, help_text='Video conference link', verbose_name='Meeting URL')),
                ('meeting_password', models.CharField(blank=True, max_length=50, verbose_name='Meeting Password')),
                ('platform', models.CharField(choices=[('zoom', 'Zoom'), ('teams', 'Microsoft Teams'), ('meet', 'Google Meet'), ('webex', 'Cisco Webex'), ('internal', 'Internal System')], default='internal', max_length=50, verbose_name='Platform')),
                ('scheduled_start_time', models.DateTimeField(verbose_name='Scheduled Start')),
                ('actual_start_time', models.DateTimeField(blank=True, null=True, verbose_name='Actual Start')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='End Time')),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration (Minutes)')),
                ('doctor_joined_at', models.DateTimeField(blank=True, null=True, verbose_name='Doctor Join Time')),
                ('patient_joined_at', models.DateTimeField(blank=True, null=True, verbose_name='Patient Join Time')),
                ('connection_quality', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], max_length=20, verbose_name='Connection Quality')),
                ('technical_issues', models.TextField(blank=True, verbose_name='Technical Issues')),
                ('consultation_notes', models.TextField(blank=True, verbose_name='Consultation Notes')),
                ('patient_feedback', models.TextField(blank=True, verbose_name='Patient Feedback')),
                ('doctor_feedback', models.TextField(blank=True, verbose_name='Doctor Feedback')),
                ('patient_rating', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Patient Rating (1-5)')),
                ('doctor_rating', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='Doctor Rating (1-5)')),
                ('is_recorded', models.BooleanField(default=False, verbose_name='Was it recorded?')),
                ('recording_url', models.URLField(blank=True, verbose_name='Recording URL')),
                ('shared_files', models.JSONField(blank=True, default=list, help_text='List of files shared during the consultation', verbose_name='Shared Files')),
                ('is_encrypted', models.BooleanField(default=True, verbose_name='Is it encrypted?')),
                ('waiting_room_enabled', models.BooleanField(default=True, verbose_name='Waiting Room Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='telemedicine_consultation', to='appointments.appointment', verbose_name='Appointment')),
            ],
            options={
                'verbose_name': 'Telemedicine Consultation',
                'verbose_name_plural': 'Telemedicine Consultations',
                'ordering': ['-scheduled_start_time'],
            },
        ),
        migrations.CreateModel(
            name='TeleMedicineSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_camera_enabled', models.BooleanField(default=True, verbose_name='Default Camera On')),
                ('default_microphone_enabled', models.BooleanField(default=True, verbose_name='Default Microphone On')),
                ('video_quality', models.CharField(choices=[('low', 'Low (360p)'), ('medium', 'Medium (720p)'), ('high', 'High (1080p)')], default='medium', max_length=20, verbose_name='Video Quality')),
                ('consultation_reminders', models.BooleanField(default=True, verbose_name='Consultation Reminders')),
                ('reminder_minutes_before', models.PositiveIntegerField(default=15, verbose_name='Remind How Many Minutes Before')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='SMS Notifications')),
                ('require_waiting_room', models.BooleanField(default=True, verbose_name='Waiting Room Required')),
                ('allow_recording', models.BooleanField(default=False, verbose_name='Allow Recording')),
                ('allow_file_sharing', models.BooleanField(default=True, verbose_name='Allow File Sharing')),
                ('max_consultation_duration', models.PositiveIntegerField(default=60, verbose_name='Maximum Consultation Duration (Minutes)')),
                ('auto_end_consultation', models.BooleanField(default=True, verbose_name='End Automatically')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='telemedicine_settings', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Telemedicine Settings',
                'verbose_name_plural': 'Telemedicine Settings',
            },
        ),
        migrations.CreateModel(
            name='VideoSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=255, verbose_name='Room Name')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='Start Time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='End Time')),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration (seconds)')),
                ('recording_url', models.URLField(blank=True, null=True, verbose_name='Recording URL')),
                ('connection_quality', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], max_length=20, null=True, verbose_name='Connection Quality')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_sessions', to='telemedicine.telemedicineappointment', verbose_name='Appointment')),
                ('ended_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ended_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Terminated by')),
                ('started_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='started_sessions', to=settings.AUTH_USER_MODEL, verbose_name='Started by')),
            ],
            options={
                'verbose_name': 'Video Session',
                'verbose_name_plural': 'Video Sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='TelemedPrescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medications', models.JSONField(help_text='Medication list and dosage information', verbose_name='Medications')),
                ('instructions', models.TextField(verbose_name='Instructions')),
                ('duration_days', models.PositiveIntegerField(verbose_name='Duration (days)')),
                ('is_renewable', models.BooleanField(default=False, verbose_name='Is it renewable?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='telemedicine.telemedicineappointment', verbose_name='Appointment')),
                ('created_by', models.ForeignKey(limit_choices_to={'user_type': 'doctor'}, on_delete=django.db.models.deletion.CASCADE, related_name='created_telemedicine_prescriptions', to=settings.AUTH_USER_MODEL, verbose_name='Creating Doctor')),
            ],
            options={
                'verbose_name': 'Telemedicine Prescription',
                'verbose_name_plural': 'Telemedicine Prescriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TelemedNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('note_type', models.CharField(choices=[('diagnosis', 'Diagnosis'), ('treatment_plan', 'Treatment Plan'), ('follow_up', 'Follow-up'), ('general', 'General Note')], default='general', max_length=50, verbose_name='Note Type')),
                ('is_private', models.BooleanField(default=False, help_text='Private notes can only be seen by the doctor', verbose_name='Is it a private note?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='telemedicine.telemedicineappointment', verbose_name='Appointment')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_telemedicine_notes', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Telemedicine Note',
                'verbose_name_plural': 'Telemedicine Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeleMedicineMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('file', 'File'), ('image', 'Image'), ('system', 'System Message')], default='text', max_length=20, verbose_name='Message Type')),
                ('content', models.TextField(verbose_name='Content')),
                ('file_url', models.URLField(blank=True, verbose_name='File URL')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is it read?')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Time')),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to='telemedicine.telemedicineconsultation', verbose_name='Consultation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Sender')),
            ],
            options={
                'verbose_name': 'Telemedicine Message',
                'verbose_name_plural': 'Telemedicine Messages',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TelemedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('document_type', models.CharField(choices=[('lab_result', 'Lab Result'), ('prescription', 'Prescription'), ('medical_image', 'Medical Image'), ('referral', 'Referral'), ('other', 'Other')], max_length=50, verbose_name='Document Type')),
                ('file', models.FileField(upload_to='telemedicine/documents/', verbose_name='File')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='telemedicine.telemedicineappointment', verbose_name='Appointment')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_telemedicine_documents', to=settings.AUTH_USER_MODEL, verbose_name='Uploader')),
            ],
            options={
                'verbose_name': 'Telemedicine Document',
                'verbose_name_plural': 'Telemedicine Documents',
                'ordering': ['-created_at'],
            },
        ),
    ]
