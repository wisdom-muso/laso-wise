networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  static_volume:
  media_volume:
  postgres_data:

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-laso_db}
      POSTGRES_USER: ${POSTGRES_USER:-laso_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-laso_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend with Bootstrap UI
  web:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VCS_REF: ${VCS_REF:-$(git rev-parse --short HEAD)}
        VERSION: ${VERSION:-latest}
    expose:
      - 8005
    volumes:
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media
    environment:
      # Core Django Settings
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:?SECRET_KEY is required}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-65.108.91.110,localhost,127.0.0.1}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://65.108.91.110,https://65.108.91.110}
      - CSRF_COOKIE_SECURE=False
      - SESSION_COOKIE_SECURE=False
      
      # Database Configuration
      - DATABASE_URL=postgresql://${POSTGRES_USER:-laso_user}:${POSTGRES_PASSWORD:-secure_password}@db:5432/${POSTGRES_DB:-laso_db}
      
      # Application Configuration
      - CURRENCY=${CURRENCY:-USD}
      
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8005/api/health/', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Django only)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "8005:8005"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
    command: sh -c "rm -f /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - web
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s