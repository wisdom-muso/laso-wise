# Generated by Django 5.2.1 on 2025-06-01 16:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('template_type', models.CharField(choices=[('appointment_reminder', 'Appointment Reminder'), ('appointment_confirmation', 'Appointment Confirmation'), ('appointment_cancellation', 'Appointment Cancellation'), ('test_result', 'Test Result Notification'), ('prescription', 'Prescription Notification'), ('welcome', 'Welcome'), ('password_reset', 'Password Reset'), ('custom', 'Custom Template')], max_length=30, verbose_name='Template Type')),
                ('subject', models.CharField(max_length=200, verbose_name='Email Subject')),
                ('content', models.TextField(help_text='You can use HTML. Use {{variable_name}} format for variables.', verbose_name='Email Content')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('report_type', models.CharField(choices=[('doctor_performance', 'Doctor Performance Report'), ('patient_statistics', 'Patient Statistics Report'), ('financial', 'Financial Report'), ('appointment', 'Appointment Report'), ('treatment', 'Treatment Report'), ('custom', 'Custom Report')], max_length=30, verbose_name='Report Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('query', models.TextField(help_text='SQL query to be executed when generating report using this template.', verbose_name='SQL Query')),
                ('columns', models.JSONField(default=list, help_text='Columns to display in report. JSON format: [{"name": "column_name", "display": "Display Name"}]', verbose_name='Columns')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
            },
        ),
        migrations.CreateModel(
            name='SystemStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='Date')),
                ('total_patients', models.IntegerField(default=0, verbose_name='Total Patient Count')),
                ('total_doctors', models.IntegerField(default=0, verbose_name='Total Doctor Count')),
                ('total_appointments', models.IntegerField(default=0, verbose_name='Total Appointment Count')),
                ('completed_appointments', models.IntegerField(default=0, verbose_name='Completed Appointment Count')),
                ('cancelled_appointments', models.IntegerField(default=0, verbose_name='Cancelled Appointment Count')),
                ('total_treatments', models.IntegerField(default=0, verbose_name='Total Treatment Count')),
                ('daily_active_users', models.IntegerField(default=0, verbose_name='Daily Active User Count')),
                ('data_json', models.JSONField(default=dict, help_text='You can save additional statistical data in JSON format in this field.', verbose_name='Additional Data (JSON)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
            ],
            options={
                'verbose_name': 'System Statistics',
                'verbose_name_plural': 'System Statistics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('content', models.TextField(verbose_name='Content')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='core.message', verbose_name='Parent Message')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL, verbose_name='Receiver')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL, verbose_name='Sender')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('appointment', 'Randevu Bildirimi'), ('test_result', 'Test Sonucu Bildirimi'), ('prescription', 'Reçete Bildirimi'), ('message', 'Mesaj Bildirimi'), ('system', 'Sistem Bildirimi')], max_length=20, verbose_name='Bildirim Tipi')),
                ('title', models.CharField(max_length=200, verbose_name='Başlık')),
                ('message', models.TextField(verbose_name='Mesaj')),
                ('related_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='İlgili URL')),
                ('is_read', models.BooleanField(default=False, verbose_name='Okundu mu?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Bildirim',
                'verbose_name_plural': 'Bildirimler',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Rapor Adı')),
                ('parameters', models.JSONField(default=dict, help_text='Rapor oluşturulurken kullanılan parametreler. JSON formatında.', verbose_name='Parametreler')),
                ('result_data', models.JSONField(default=list, help_text='Rapor sonucu. JSON formatında.', verbose_name='Sonuç Verileri')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('report_file', models.FileField(blank=True, null=True, upload_to='reports/', verbose_name='Rapor Dosyası')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='core.reporttemplate', verbose_name='Rapor Şablonu')),
            ],
            options={
                'verbose_name': 'Oluşturulan Rapor',
                'verbose_name_plural': 'Oluşturulan Raporlar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DoctorStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Tarih')),
                ('appointment_count', models.IntegerField(default=0, verbose_name='Randevu Sayısı')),
                ('completed_appointment_count', models.IntegerField(default=0, verbose_name='Tamamlanan Randevu Sayısı')),
                ('treatment_count', models.IntegerField(default=0, verbose_name='Tedavi Sayısı')),
                ('prescription_count', models.IntegerField(default=0, verbose_name='Reçete Sayısı')),
                ('lab_test_count', models.IntegerField(default=0, verbose_name='Laboratuvar Testi Sayısı')),
                ('average_appointment_duration', models.FloatField(default=0.0, verbose_name='Ortalama Randevu Süresi (dakika)')),
                ('data_json', models.JSONField(default=dict, verbose_name='Ek Veriler (JSON)')),
                ('doctor', models.ForeignKey(limit_choices_to={'user_type': 'doctor'}, on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to=settings.AUTH_USER_MODEL, verbose_name='Doktor')),
            ],
            options={
                'verbose_name': 'Doktor İstatistiği',
                'verbose_name_plural': 'Doktor İstatistikleri',
                'ordering': ['-date'],
                'unique_together': {('doctor', 'date')},
            },
        ),
    ]
